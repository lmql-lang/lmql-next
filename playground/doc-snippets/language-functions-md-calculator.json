{"lmql-editor-contents": "import re\nfrom lmql.demo import gsm8k_samples\n\ndef calc(expr):\n      expr = re.sub(r\"[^0-9+\\-*/().]\", \"\", expr)\n      return eval(expr)\n\nargmax(openai_chunksize=128, max_len=2048)\n      QUESTION = \"Josh decides to try flipping a house.  He buys a house for $80,000 and then puts in $50,000 in repairs.  This increased the value of the house by 150%.  How much profit did he make?\"\n      # few shot samples\n      \"{gsm8k_samples()}\"\n      # prompt template\n      \"Q: {QUESTION}\\n\"\n      \"Let's think step by step.\\n\"\n      for i in range(4):\n         \"[REASON_OR_CALC]\"\n         if REASON_OR_CALC.endswith(\"<<\"):\n            \" [EXPR]\"\n            \" {calc(EXPR)}>>\"\n         elif REASON_OR_CALC.endswith(\"So the answer\"):\n            break\n      \"is[RESULT]\"\nfrom \n      'openai/text-davinci-003'\nwhere\n      STOPS_AT(REASON_OR_CALC, \"<<\") and\n      STOPS_AT(EXPR, \"=\") and\n      STOPS_AT(REASON_OR_CALC, \"So the answer\")", "decoder-graph": "{\"nodes\": [], \"edges\": []}"}